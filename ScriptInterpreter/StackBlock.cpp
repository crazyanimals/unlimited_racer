#include "stdafx.h"
#include "StackBlock.h"



//////////////////////////////////////////////////////////////////////////////////////////////
// CStackBlock destructor frees stored variables
//////////////////////////////////////////////////////////////////////////////////////////////
CStackBlock::~CStackBlock()
{
	VARIABLES_ITERATOR	iter;

	for ( iter = Variables.begin(); iter != Variables.end(); iter++ ) delete iter->second;

	this->Variables.clear();
}

//////////////////////////////////////////////////////////////////////////////////////////////
// returns true if this variable exists in this block 
//////////////////////////////////////////////////////////////////////////////////////////////
BOOL CStackBlock::VariableExists( CString varName )
{
	VARIABLES_ITERATOR	iter;
	
	iter = Variables.find( varName );

	if ( iter != Variables.end() ) return TRUE;
	else return FALSE;
}

//////////////////////////////////////////////////////////////////////////////////////////////
// returns a value of a variable
//////////////////////////////////////////////////////////////////////////////////////////////
CString CStackBlock::GetVariableString( CString varName )
{
	VARIABLES_ITERATOR	iter;
	
	iter = Variables.find( varName );

	if ( iter != Variables.end() ) return iter->second->GetString();
	else return "";
}

//////////////////////////////////////////////////////////////////////////////////////////////
// returns a value of a variable
//////////////////////////////////////////////////////////////////////////////////////////////
int CStackBlock::GetVariableInt( CString varName )
{
	VARIABLES_ITERATOR	iter;
	
	iter = Variables.find( varName );

	if ( iter != Variables.end() ) return iter->second->GetInt();
	else return 0;
}

//////////////////////////////////////////////////////////////////////////////////////////////
// returns a value of a variable
//////////////////////////////////////////////////////////////////////////////////////////////
FLOAT CStackBlock::GetVariableFloat( CString varName )
{
	VARIABLES_ITERATOR	iter;
	
	iter = Variables.find( varName );

	if ( iter != Variables.end() ) return iter->second->GetFloat();
	else return 0.0f;
}

//////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////

